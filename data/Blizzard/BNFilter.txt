// Character Pool: !@#$%&

asshole   = @$%!@%&
bitch     = #@%$!
clit      = $%@%
cock      = $!$%
cunt      = $&!%
dick      = %@$%
dildo     = %@%&!
erect     = &#&$%
faggot    = !@!@!%
fuck      = !&$%
gook      = !@!$
masturbat = &@$%&#$@%
nigga     = !@!@#
nigger    = !@!@&#
penis     = !&!@$
pussy     = !&$%@
shit      = $!@%
slut      = $%&%
whore     = !@!#&

====== Algorithm [C++]: ======

  const char *pszBadWords[] =
  { 
    "asshole",
    "bitch",
    "clit",
    "cock",
    "cunt",
    "dick",
    "dildo",
    "erect",
    "faggot",
    "fuck",
    "gook",
    "masturbat",
    "nigga",
    "nigger",
    "penis",
    "pussy",
    "shit",
    "slut",
    "whore",
    NULL
  };

  const char szBadWordCharacters[] = { '!', '@', '#', '$', '%', '&' };

  void BadWordFilter(char *pszString)
  {
    // Iterate each badword
    for ( int f = 0; pszBadWords[f]; ++f )
    {
      // Find badword
      char *pszMatch = StrStrI(pszString, pszBadWords[f]);
      if ( !pszMatch )
        continue; // continue if badword not found

      // iterate characters in badword
      char cLast = 0;
      for ( int i = 0; pszBadWords[f][i]; ++i )
      {
        // make the character compatible with our replacements
        int val = pszBadWords[f][i] & 7;
        if ( val >= sizeof(szBadWordCharacters) )
          val = 0;

        // increment the replacement if it's the same as our last one, reset to 0 if it's out of bounds
        if ( cLast == szBadWordCharacters[val] && ++val == sizeof(szBadWordCharacters) )
          val = 0;

        // apply our change to the original string and save the last character used
        pszMatch[i] = szBadWordCharacters[val];
        cLast       = szBadWordCharacters[val];
      }
    }
  }
