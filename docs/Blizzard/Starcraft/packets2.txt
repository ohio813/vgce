#summary Starcraft commands list used in replays and packets


=Table of Contents=
<wiki:toc max_depth="2" />


=Notes=
This list has been merged due to the similarity between Replay data and Packet data.

The command opcode is not stored in the Command ID of the packet, but rather in the data, where many commands may stack.
Command class 1 opcodes are typically those from ~0x49 to ~0x53.


=Command Opcodes=
----------------------------------------------------
== 0x5C - Replay Chat ==
{{{
  BYTE bSlotID;
  char szMessage[80];
}}}
CLASS 2

----------------------------------------------------
== 0x5B -  Make Game Public ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x5A - Merge Dark Archon ==
{{{
  // No parameters.
}}}
CLASS 2 

----------------------------------------------------
0x59 - INVALID
----------------------------------------------------
== 0x58 - Minimap Ping ==
{{{
  s16 x;
  s16 y;
}}}
CLASS 2 

----------------------------------------------------
== 0x57 - Leave Game ==
{{{
	BYTE bReason;
  {
    LEAVE_QUIT     0x01
    LEAVE_DEFEAT   0x02
    LEAVE_VICTORY  0x03
    LEAVE_FINISHED 0x04
    LEAVE_DRAW     0x05
    LEAVE_DROP     0x06
  }
}}}
CLASS 2 

----------------------------------------------------
== 0x56 - Change Replay Speed ==
{{{
  BYTE bType;
  {
    REPLAY_PLAY  0x00
    REPLAY_PAUSE 0x01
  }
  DWORD dwSpeed;
  {
    SPEED_SLOWEST 0x00
    SPEED_SLOWER  0x01
    SPEED_SLOW    0x02
    SPEED_NORMAL  0x03
    SPEED_FAST    0x04
    SPEED_FASTER  0x05
    SPEED_FASTEST 0x06
  }
  DWORD dwMultiplier;
}}}
CLASS 2 

----------------------------------------------------
== 0x55 - Set Latency ==
{{{
  BYTE bLatency;
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x54 - Mission Briefing Start ==
{{{
  // No Parameters
}}}
CLASS 2

----------------------------------------------------
== 0x53 - Entered Briefing Room (Internal) ==
{{{
  // No Parameters
}}}
RETURN CODE

----------------------------------------------------
== 0x52 - Unidentified Command (Lobby) (Internal) ==
{{{
  // No Parameters
}}}
RETURN CODE

----------------------------------------------------
== 0x51 - Network Error (Internal) ==
{{{
  // No Parameters
}}}
RETURN CODE

----------------------------------------------------
== 0x50 - Nothing (Lobby) (Internal) ==
{{{
  // No Parameters.
}}}
RETURN CODE

----------------------------------------------------
== 0x4F - Map data transfer ==
{{{
    WORD  wCmdSize;
    BYTE  bTransferType;
        ... data ...
    
bTransferType:
  0x00 - FD_FILE_STATUS_NEED ( size == 8 )
    {
      BYTE  bUnk1;
      BYTE  bUnk2;    // thought this was netPlayerID too? 
      BYTE  bNetPlayerID;
      DWORD dwMapSize;
    }
  0x01 -  FD_FILE_STATUS_HAVE ( size >= 10 )
    {
      BYTE  bNetPlayerID;
      DWORD dwFileSize;
      DWORD dwFileHash;
      char  szFileName[];
    }
  0x02 - ( size == 7 )
    {
      u8    bNetPlayerID; // guess
      u8    unknown1;
      u32   unknown2;
    }
  0x03 - FD_TRANSMISSION_STATUS_SENDING ( size == 2 )
    {
      u8    bNetPlayerID; // guess
    }
  0x04 - FD_TRANSMISSION_STATUS_RECEIVING ( size >= 9 )
    {
      BYTE  bNetPlayerID;   // guess; id from/to?
      BYTE  bNetPlayerID2;
      DWORD dwFilePosition;
      WORD  wBlockSize;
      BYTE  bBlockData[wBlockSize];
    }
  0x05 - FD_TRANSMISSION_STATUS_IDLE ( size == 7 )
    {
      BYTE  bNetPlayerID;   // guess; id from/to?
      BYTE  bNetPlayerID2;
      u32   unknown2;
    }
  0x06 - Response ( size == 3 )
    {
      BYTE  bNetPlayerID;   // guess; id from/to?
      BYTE  bNetPlayerID2;
    }
}}}
CLASS 1

----------------------------------------------------
== 0x4E - Boot Player ==
{{{
  BYTE bReason;
  {
    0x00 = "You have been booted."			// Default case
    0x01 = "You have been banned."
    0x02 = "The game creator closed all available slots."
    0x03 = "The game host has left."
    0x04 = "Unable to join game."
    0x05 = "Save game file not found."
    0x06 = "Unable to write scenario file."
    0x07 = "You cannot join this game because it is a different version of Starcraft."
    0x08 = "You are not able to join this game. It was not created with the same CD that spawned your copy of StarCraft."
    0x09 = "Unable to authenticate map."
  }
}}}
CLASS 1

----------------------------------------------------
== 0x4D - Lobby Chat 2 (Unused) ==
{{{
  char szMessage[];
}}}
CLASS 1

----------------------------------------------------
== 0x4C - Lobby Chat ==
{{{
  char szMessage[];
}}}
CLASS 1

----------------------------------------------------
== 0x4B - Force Name Transfer ==
{{{
  char szForceNames[4][30];
}}}
CLASS 1

----------------------------------------------------
== 0x4A - Player/Force Data Transfer ==
{{{
  WORD wTileset;
  WORD wWidth;
  WORD wHeight

  BYTE bPlayerUnknownController[12]; // ?
  BYTE bPlayerRace[12];
  BYTE bPlayerUnknownRace[8]; // ?
  BYTE bPlayerController[12];
  BYTE bPlayerTeam[12];
}}}
CLASS 1

----------------------------------------------------
== 0x49 - Information Request == 
{{{
  DWORD dwLocalStormID;
}}}
CLASS 1

----------------------------------------------------
== 0x48 - Game Init ==
{{{
  DWORD dwRandomSeed;
  BYTE  bPlayerBytes[8];
}}}
CLASS 2

----------------------------------------------------
0x47 - INVALID
0x46 - INVALID
----------------------------------------------------
== 0x45 - Swap Players ==
{{{
	BYTE bOldSlot;
	BYTE bNewSlot;
}}}
CLASS 2

----------------------------------------------------
== 0x44 -  Slot Change ==
{{{
  BYTE bSlot;
  BYTE bNewOwner; // (0 = Computer; 1 = Open; 2 = Closed)
}}}
CLASS 2

----------------------------------------------------
== 0x43 - Force Change UMS ==
{{{
	BYTE bNewTeam       // official name
}}}
CLASS 2

----------------------------------------------------
== 0x42 - Force Change Melee ==
{{{
	BYTE bNewTeam;      // official name
}}}
CLASS 2

----------------------------------------------------
== 0x41 - Race Change ==
{{{
	BYTE  bSlot;       // official name
	BYTE  bNewRace;    // official name
}}}
CLASS 2

----------------------------------------------------
== 0x40 - Version Confirmation ==
{{{
  BYTE  unknown1; // 0
  BYTE  unknown2; // 0
  DWORD unknown3; // 0
  WORD  version1; // 0
  WORD  version2; // 1
  WORD  version3; // 5
  BYTE  unknown7; // 0 (Font/Lang ?)
  DWORD dwKeyHash;
}}}
CLASS 2

----------------------------------------------------
== 0x3F - Version Verification ==
{{{
	BYTE bStormPlayerID;
	WORD version1; // 0
	WORD version2; // 1
	WORD version3; // 5
}}}
CLASS 2

----------------------------------------------------
== 0x3E - Game Slot Modification ==
{{{
	BYTE  bSlot;  // official name
	BYTE  bStormPlayerID;
	BYTE  nType;      // official name
	BYTE  bNewRace;   // official name
	BYTE  nTeam;      // official name
}}}
CLASS 2

----------------------------------------------------
== 0x3D - Map Download % ==
{{{
	char nPercent;
}}}
CLASS 2

----------------------------------------------------
== 0x3C - Start Game ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
0x3B - Voice Squelch 2 (Unused)
{{{
	BYTE bSlotID;
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
0x3A - Voice Squelch 1 (Unused)
{{{
	BYTE bSlotID;
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
0x39 - Voice Enable 2 (Unused)
{{{
  // No parameters.
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
0x38 - Voice Enable 1 (Unused)
{{{
  // No parameters.
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x37 - Sync ==
{{{
  BYTE  bSeq;     // bType = bSeq & 0x0F
                  // bIndex = bSeq >> 4;
                  // Where bIndex is between 0 and 16
                  // bType is
                  //    0/1: Units hash (All units' Type, Shields, Energy, sprite X/Y, and upper HP)
                  //    2: Resources(ore/gas for all players), last random number, and elapsed time hash
                  //    default: index hash
  WORD  wSeqHash; // Above in addition to Fog(for X axis only with incrementing/looping Y), Player index and Vision hash is always calculated
  BYTE  bVisibilityHash; // Involves Sprite and region Vision
  BYTE  bVisibilityID;
  BYTE  bMinimapBoxCount; // Number of unit boxes drawn on the minimap
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x36 - Stim Pack ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x35 - Zerg Bldg Morph ==
{{{
	WORD wUnitType;
}}}
CLASS 2

----------------------------------------------------
== 0x34 - Stop Addon (Cancel Addon) ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x33 - Order Stop Upgrade (Cancel Upgrade) ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x32 - Order Upgrade ==
{{{
	BYTE bUpgradeType;
}}}
CLASS 2

----------------------------------------------------
== 0x31 - Order Stop Research (Cancel Research) ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x30 - Order Research ==
{{{
	BYTE bTechType;
}}}
CLASS 2

----------------------------------------------------
== 0x2F - Lift Off ==
{{{
	short x;
	short y;
}}}
CLASS 2

----------------------------------------------------
== 0x2E - Cancel Nuke ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x2D - Deburrow (Unburrow) ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
== 0x2C - Burrow ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
== 0x2B - Hold Position ==
{{{
	BYTE bCommandType;
  {
    0x00 = "Instant Order",
    0x01 = "Queued Order"
  }
}}}
CLASS 2

----------------------------------------------------
== 0x2A - Summon Archon (Merge) ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x29 - Exit Transport ==
{{{
	WORD wUnitID;
}}}
CLASS 2

----------------------------------------------------
== 0x28 - Unload All ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
== 0x27 - Build Fighter ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x26 - Siege Mode ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
== 0x25 - Tank Mode ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
0x24 -  INVALID
----------------------------------------------------
== 0x23 - Morph (Unit) ==
{{{
	WORD wUnitType;
}}}
CLASS 2

----------------------------------------------------
== 0x22 - Decloak ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
== 0x21 - Cloak ==
{{{
	BYTE bCommandType; // Unused
}}}
CLASS 2

----------------------------------------------------
== 0x20 - Order Stop Build (Cancel Train) ==
{{{
	WORD wUnitID;
}}}
CLASS 2

----------------------------------------------------
== 0x1F - Order Build (Train) ==
{{{
	WORD wUnitType;
}}}
CLASS 2

----------------------------------------------------
== 0x1E - Order Return ==
{{{
	BYTE bCommandType;
  {
    0x00 = "Instant Order",
    0x01 = "Queued Order"
  }
}}}
CLASS 2

----------------------------------------------------
== 0x1D - Order Nothing ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x1C - Order Stop Trilobyte (Reaver) ==
{{{
  // No parameters
}}}
CLASS 2

----------------------------------------------------
== 0x1B - Order Stop Carrier ==
{{{
  // No parameters
}}}
CLASS 2

----------------------------------------------------
== 0x1A - Order Stop ==
{{{
	BYTE bCommandType;
  {
    0x00 = "Instant Order",
    0x01 = "Queued Order"
  }
}}}
CLASS 2

----------------------------------------------------
== 0x19 - Order Kill Egg (Cancel Morph) ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
== 0x18 - Order Kill (Cancel Construction) ==
{{{
  // No parameters.
}}}
CLASS 2

----------------------------------------------------
0x17 - INVALID
0x16 - INVALID
----------------------------------------------------
== 0x15 - Action ==
{{{
	short x;
	short y;
	WORD  wUnitID;
	WORD  wUnitType;
	BYTE  bAction; // Order Type
	BYTE  bCommandType;
  {
    0x00 = "Instant Order",
    0x01 = "Queued Order"
  }
}}}
CLASS 2

----------------------------------------------------
== 0x14 - Right Click ==
{{{
  short x;
  short y;
	WORD  wTargetID;
	WORD  wUnitType;
	BYTE  bCommandType;
  {
    0x00 = "Instant Order",
    0x01 = "Queued Order"
  }
}}}
CLASS 2

----------------------------------------------------
== 0x13 - Group Units ==
{{{
	BYTE bGroupType;
  {
    0x00 = "save",
    0x01 = "recall"
    0x02 = "add"
  }
	BYTE bGroupSlot;
}}}
CLASS 2

----------------------------------------------------
== 0x12 - Cheat ==
{{{
  LONG lCheat;
  {
    0x1           Black Sheep Wall
    0x2           Operation CWAL
    0x4           Power Overwhelming
    0x8           Something for Nothing
    0x10          Show Me The Money
    0x20
    0x40          Game Over Man
    0x80          There is no cow level
    0x100         Staying Alive
    0x200         Ophelia
    0x400
    0x800         The Gathering
    0x1000        Medieval Man
    0x2000        Modify The Phase Variance
    0x4000        War Aint What it Used to be
    0x8000
    0x10000
    0x20000       Food For Thought
    0x40000       What's Mine is Mine
    0x80000       Breathe Deep
    0x8000000     Ophelia Activated
    0x20000000    Noglues and/or Ophelia Scenario selected?

    0x28000200    Full Ophelia
  }
}}}
CLASS 2

----------------------------------------------------
== 0x11 - Pause Off ==
{{{
  // No parameters.
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x10 - Pause On ==
{{{
  // No parameters.
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x0F - Set Speed ==
{{{
  BYTE bGameSpeed;
  {
    SPEED_SLOWEST 0x00
    SPEED_SLOWER  0x01
    SPEED_SLOW    0x02
    SPEED_NORMAL  0x03
    SPEED_FAST    0x04
    SPEED_FASTER  0x05
    SPEED_FASTEST 0x06
  }
}}}
CLASS 2

----------------------------------------------------
== 0x0E - Set Allies ==
{{{
  DWORD dwAlliance;  // (dwAlliance >> playerID*2) & 3 // move dwAlliance to temp var
}}}
CLASS 2

----------------------------------------------------
== 0x0D - Set Fog (Vision) ==
{{{
	WORD wVision;   // (wVision >> playerID) & 1 // move wVision to temp
}}}
CLASS 2

----------------------------------------------------
== 0x0C - Placebox (Build) ==
{{{
  BYTE bOrderType;
	short x; // tile position, not pixel position
	short y; 
	BYTE bUnitType;
}}}
CLASS 2

----------------------------------------------------
== 0x0B - Select Delta Del ==
{{{
	BYTE bCount;
	WORD unitID[bCount];
}}}
CLASS 2

----------------------------------------------------
== 0x0A - Select Delta Add ==
{{{
	BYTE bCount;
	WORD unitID[bCount];
}}}
CLASS 2

----------------------------------------------------
== 0x09 - Select Units ==
{{{
	BYTE bCount;
	WORD unitID[bCount];
}}}
CLASS 2

----------------------------------------------------
== 0x08 - Restart Game ==
{{{
  // No parameters.
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x07 -  Load Game ==
{{{
  DWORD dwGameID;
  char  szName[];    // ?
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x06 - Save Game ==
{{{
  DWORD dwSaveTime;
  char  szName[];    // must be less than size of 64
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
== 0x05 -  Keep Alive ==
{{{
  // No parameters.
}}}
CLASS 2 (Filtered out of replay)

----------------------------------------------------
0x04 - INVALID
0x03 - INVALID
----------------------------------------------------
== 0x02 - Null Chat (Unused) ==
{{{
  BYTE bType;
  char szMessage[];
}}}
CLASS 1

----------------------------------------------------
== 0x01 - Private Chat (Unused) ==
{{{
  BYTE bType;
  char szMessage[];
}}}
CLASS 1

----------------------------------------------------
== 0x00 - Public Chat ==
{{{
  BYTE bType;
  char szMessage[];
}}}
CLASS 1

----------------------------------------------------


=Packet Header=
{{{
  struct SNPHead
  {
    DWORD dwSnpType { 0x00 = Storm packet; other values known but private for now }
    struct STORMHead
    {
      WORD wChecksum;
      WORD wLength;
      WORD wSent;
      WORD wReceived;
      BYTE bCommandClass; // 0x01 and 0x02 for this document
      BYTE bCommandID;    // 0x00 for this document
      BYTE bStormPlayerID;
      BYTE bFlags;
      {
          0x00 = Normal Traffic
          0x01 = Verification
          0x02 = Resend request
          0x04 = Callback
      }
      void data;
    }
  }
  
}}}
The command opcode is not stored in the Command ID of the packet, but rather in the data, where many commands may stack.
Command class 2 opcodes are those you'd find in a replay; unit actions.
Command class 1 opcodes are others used by Starcraft for communication; send text; lobby data; join game.

=Replay Header=
{{{
   DWORD dwTime;     // (Game Ticks * 255??)
   BYTE  bFrameSize; // (Amount of bytes before the start of the next game frame)

        BYTE bPlayerID;
        BYTE bCommandID;
        ...Command Variables...
}}}
