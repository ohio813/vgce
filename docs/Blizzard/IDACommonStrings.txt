"000000000  53 75 6E                                          |Sun             |"
"000000055  4D 6F 6E                                          |Mon             |"
"0000000AA  54 75 65                                          |Tue             |"
"0000000F9  57 65 64                                          |Wed             |"
"00000014E  54 68 75                                          |Thu             |"
"0000001A3  46 72 69                                          |Fri             |"
"0000001F8  53 61 74                                          |Sat             |"

Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday

4A 61 6E                                          |Jan             |"
46 65 62                                          |Feb             |"
4D 61 72                                          |Mar             |"
41 70 72                                          |Apr             |"
4D 61 79                                          |May             |"
4A 75 6E                                          |Jun             |"
4A 75 6C                                          |Jul             |"
41 75 67                                          |Aug             |"
53 65 70                                          |Sep             |"
4F 63 74                                          |Oct             |"
4E 6F 76                                          |Nov             |"
44 65 63                                          |Dec             |"

January
February
March
April
May
June
July
August
September
October
November
December

AM
PM
MM/dd/yy
M/d/yy
dddd, MMMM dd, yyyy
HH:mm:ss
H:mm:ss
PST
PDT
null
exp
pow
log
log10
sinh
cosh
tanh
asin
acos
atan
atan2
sqrt
sin
cos
tan
ceil
floor
fabs
modf
ldexp
_caps
_hypot
fmod
frexp
_y0
_y1
_yn
_logb
_nextafter

new
delete
wb

nul
con
prn
aux
com1
com2
com3
com4
com5
com6
com7
com8
com9
lpt1
lpt2
lpt3
lpt4
lpt5
lpt6
lpt7
lpt8
lpt9

move
and
or
xor
add
sub
not
ror

50 53 54 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00


52 45 47 49 53 54 52 41 54 49 4F 4E 5F 42 4C 4F 43 4B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

7F800000 = automatic float

[BLIZZARD ENTERTAINMENT SIGNATURES]
TENB        // BNET
MDOM        // MODM
NXPI        // IPXN
NPDU        // UDPN
LBCS        // SCBL
RAWB        // BWAR
RAWS        // SWAR

SSHR
JSTR
STAR
SEXP
DSHR
DRTL
D2DV
D2XP
W2BN
WAR3
W3XP
IX86
PMAC
XMAC

battle.net
recent games
Cmd
unknown
listfile
attributes
temp
source
txt
wav
mp3
pcx
bmp
gif
UI
MAP
dummy
w3m
w3x
w3n
wai
udh
udhb
fileass
uc
blizzard
common
string
mode
vid
Smack
Storm
cpp
.h
Starcraft
Warcraft
Diablo
program
snp
SCDDDDDD
SCDSCDSC
SDCSDCSD
DDDDDDDD
SASCADSS
SASCACDS
SASDACDS
D=A
D=S
ddraw
module
(block table)
(hash table)
(listfile)
(signature)
(null)
(unknown)
runtime

/* Constants */

0x7FED7FED
0xDEADBEEF
0xEEEEEEEE


/* Tables */

const int zlib_extra_lbits[29] = {
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00 00 00 00 00
};

const int zlib_extra_dbits[30] = {
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00 03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00 05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00 07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00 09 00 00 00 09 00 00 00 0A 00 00 00 0A 00 00 00 0B 00 00 00 0B 00 00 00 0C 00 00 00 0C 00 00 00 0D 00 00 00 0D 00 00 00
};

const int zlib_extra_blbits[19] = {
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 03 00 00 00 07 00 00 00
};

const unsigned char zlib_bl_order[19] = {
    16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15
};

static const unsigned short zlib_lbase[31] = {
    03 00 04 00 05 00 06 00 07 00 08 00 09 00 0A 00 0B 00 0D 00 0F 00 11 00 13 00 17 00 1B 00 1F 00 23 00 2B 00 33 00 3B 00 43 00 53 00 63 00 73 00 83 00 A3 00 C3 00 E3 00 02 01 00 00 00 00
};
        
static const unsigned short zlib_lext[31] = { 
    10 00 10 00 10 00 10 00 10 00 10 00 10 00 10 00 11 00 11 00 11 00 11 00 12 00 12 00 12 00 12 00 13 00 13 00 13 00 13 00 14 00 14 00 14 00 14 00 15 00 15 00 15 00 15 00 10 00 C9 00 C4 00
};
        
static const unsigned short zlib_dbase[32] = {
    01 00 02 00 03 00 04 00 05 00 07 00 09 00 0D 00 11 00 19 00 21 00 31 00 41 00 61 00 81 00 C1 00 01 01 81 01 01 02 01 03 01 04 01 06 01 08 01 0C 01 10 01 18 01 20 01 30 01 40 01 60 00 00 00 00
};
        
static const unsigned short zlib_dext[32] = { 
    10 00 10 00 10 00 10 00 11 00 11 00 12 00 12 00 13 00 13 00 14 00 14 00 15 00 15 00 16 00 16 00 17 00 17 00 18 00 18 00 19 00 19 00 1A 00 1A 00 1B 00 1B 00 1C 00 1C 00 1D 00 1D 00 40 00 40 00
};

static unsigned char pkzip_dist_bits[64] = {
	02 04 04 05 05 05 05 06 06 06 06 06 06 06 06 06	06 06 06 06 06 06 07 07 07 07 07 07 07 07 07 07	07 07 07 07 07 07 07 07 07 07 07 07 07 07 07 07	08 08 08 08 08 08 08 08 08 08 08 08 08 08 08 08

static unsigned char pkzip_dist_code[64] = {
03 0D 05 19 09 11 01 3E 1E 2E 0E 36 16 26 06 3A 1A 2A 0A 32 12 22 42 02 7C 3C 5C 1C 6C 2C 4C 0C 74 34 54 14 64 24 44 04 78 38 58 18 68 28 48 08 F0 70 B0 30 D0 50 90 10 E0 60 A0 20 C0 40 80 00
};

static unsigned char pkzip_clen_bits[16] = {
	00 00 00 00 00 00 00 00 01 02 03 04 05 06 07 08
};

static unsigned short pkzip_len_base[16] = {
	00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00 0A 00 0E 00 16 00 26 00 46 00 86 00 06 01
};

static unsigned char pkzip_slen_bits[16] = {
	03 02 03 03 04 04 04 05 05 05 05 06 06 06 07 07
};

static unsigned char pkzip_len_code[16] = {
	05 03 01 06 0A 02 0C 14 04 18 08 30 10 20 40 00
};

static unsigned char pkzip_bits_asc[256] = {
0B 0C 0C 0C 0C 0C 0C 0C 0C 08 07 0C 0C 07 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0D 0C 0C 0C 0C 0C 04 0A 08 0C 0A 0C 0A 08 07 07 08 09 07 06 07 08 07 06 07 07 07 07 08 07 07 08 08 0C 0B 07 09 0B 0C 06 07 06 06 05 07 08 08 06 0B 09 06 07 06 06 07 0B 06 06 06 07 09 08 09 09 0B 08 0B 09 0C 08 0C 05 06 06 06 05 06 06 06 05 0B 07 05 06 05 05 06 0A 05 05 05 05 08 07 08 08 0A 0B 0B 0C 0C 0C 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0D 0C 0D 0D 0D 0C 0D 0D 0D 0C 0D 0D 0D 0D 0C 0D 0D 0D 0C 0C 0C 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D 0D
};

static unsigned short pkzip_code_asc[256] = {
90 04 E0 0F E0 07 E0 0B E0 03 E0 0D E0 05 E0 09 E0 01 B8 00 62 00 E0 0E E0 06 22 00 E0 0A E0 02 E0 0C E0 04 E0 08 E0 00 60 0F 60 07 60 0B 60 03 60 0D 60 05 40 12 60 09 60 01 60 0E 60 06 60 0A 0F 00 50 02 38 00 60 02 50 00 60 0C 90 03 D8 00 42 00 02 00 58 00 B0 01 7C 00 29 00 3C 00 98 00 5C 00 09 00 1C 00 6C 00 2C 00 4C 00 18 00 0C 00 74 00 E8 00 68 00 60 04 90 00 34 00 B0 00 10 07 60 08 31 00 54 00 11 00 21 00 17 00 14 00 A8 00 28 00 01 00 10 03 30 01 3E 00 64 00 1E 00 2E 00 24 00 10 05 0E 00 36 00 16 00 44 00 30 00 C8 00 D0 01 D0 00 10 01 48 00 10 06 50 01 60 00 88 00 A0 0F 07 00 26 00 06 00 3A 00 1B 00 1A 00 2A 00 0A 00 0B 00 10 02 04 00 13 00 32 00 03 00 1D 00 12 00 90 01 0D 00 15 00 05 00 19 00 08 00 78 00 F0 00 70 00 90 02 10 04 10 00 A0 07 A0 0B A0 03 40 02 40 1C 40 0C 40 14 40 04 40 18 40 08 40 10 40 00 80 1F 80 0F 80 17 80 07 80 1B 80 0B 80 13 80 03 80 1D 80 0D 80 15 80 05 80 19 80 09 80 11 80 01 80 1E 80 0E 80 16 80 06 80 1A 80 0A 80 12 80 02 80 1C 80 0C 80 14 80 04 80 18 80 08 80 10 80 00 00 1F 00 0F 00 17 00 07 00 1B 00 0B 00 13 A0 0D A0 05 A0 09 A0 01 A0 0E A0 06 A0 0A A0 02 A0 0C A0 04 A0 08 A0 00 20 0F 20 07 20 0B 20 03 20 0D 20 05 20 09 20 01 20 0E 20 06 20 0A 20 02 20 0C 20 04 20 08 20 00 C0 0F C0 07 C0 0B C0 03 C0 0D C0 05 C0 09 C0 01 C0 0E C0 06 C0 0A C0 02 C0 0C C0 04 C0 08 C0 00 40 0F 40 07 40 0B 40 03 00 03 40 0D 00 1D 00 0D 00 15 40 05 00 05 00 19 00 09 40 09 00 11 00 01 00 1E 00 0E 40 01 00 16 00 06 00 1A 40 0E 40 06 40 0A 00 0A 00 12 00 02 00 1C 00 0C 00 14 00 04 00 18 00 08 00 10 00 00
};

static long WAV_Table1503F120[32] =
{
FF FF FF FF 00 00 00 00 FF FF FF FF 04 00 00 00 FF FF FF FF 02 00 00 00 FF FF FF FF 06 00 00 00 FF FF FF FF 01 00 00 00 FF FF FF FF 05 00 00 00 FF FF FF FF 03 00 00 00 FF FF FF FF 07 00 00 00 FF FF FF FF 01 00 00 00 FF FF FF FF 05 00 00 00 FF FF FF FF 03 00 00 00 FF FF FF FF 07 00 00 00 FF FF FF FF 02 00 00 00 FF FF FF FF 04 00 00 00 FF FF FF FF 06 00 00 00 FF FF FF FF 08 00 00 00
};

static long WAV_Table1503F1A0[89] =
{
0x00000007, 0x00000008, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C, 0x0000000D, 0x0000000E, 0x00000010, 0x00000011, 0x00000013, 0x00000015, 0x00000017, 0x00000019, 0x0000001C, 0x0000001F, 0x00000022, 0x00000025, 0x00000029, 0x0000002D, 0x00000032, 0x00000037, 0x0000003C, 0x00000042, 0x00000049, 0x00000050, 0x00000058, 0x00000061, 0x0000006B, 0x00000076, 0x00000082, 0x0000008F, 0x0000009D, 0x000000AD, 0x000000BE, 0x000000D1, 0x000000E6, 0x000000FD, 0x00000117, 0x00000133, 0x00000151, 0x00000173, 0x00000198, 0x000001C1, 0x000001EE, 0x00000220, 0x00000256, 0x00000292, 0x000002D4, 0x0000031C, 0x0000036C, 0x000003C3, 0x00000424, 0x0000048E, 0x00000502, 0x00000583, 0x00000610, 0x000006AB, 0x00000756, 0x00000812, 0x000008E0, 0x000009C3, 0x00000ABD, 0x00000BD0, 0x00000CFF, 0x00000E4C, 0x00000FBA, 0x0000114C, 0x00001307, 0x000014EE, 0x00001706, 0x00001954, 0x00001BDC, 0x00001EA5, 0x000021B6, 0x00002515, 0x000028CA, 0x00002CDF, 0x0000315B, 0x0000364B, 0x00003BB9, 0x000041B2, 0x00004844, 0x00004F7E, 0x00005771, 0x0000602F, 0x000069CE, 0x00007462, 0x00007FFF
};




static unsigned long crc32_table[256] =
{
    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,
    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,
    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,
    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,
    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,
    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,
    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,
    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,
    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,
    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,
    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,
    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,
    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,
    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,
    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,
    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,
    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,
    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,
    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,
    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,
    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,
    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,
    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,
    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,
    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,
    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,
    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D
};

Int32 BZ2_rNums[512] = { 
   6B 02, 720, 127, 481, 931, 816, 813, 233, 566, 247, 
   985, 724, 205, 454, 863, 491, 741, 242, 949, 214, 
   733, 859, 335, 708, 621, 574, 73, 654, 730, 472, 
   419, 436, 278, 496, 867, 210, 399, 680, 480, 51, 
   878, 465, 811, 169, 869, 675, 611, 697, 867, 561, 
   862, 687, 507, 283, 482, 129, 807, 591, 733, 623, 
   150, 238, 59, 379, 684, 877, 625, 169, 643, 105, 
   170, 607, 520, 932, 727, 476, 693, 425, 174, 647, 
   73, 122, 335, 530, 442, 853, 695, 249, 445, 515, 
   909, 545, 703, 919, 874, 474, 882, 500, 594, 612, 
   641, 801, 220, 162, 819, 984, 589, 513, 495, 799, 
   161, 604, 958, 533, 221, 400, 386, 867, 600, 782, 
   382, 596, 414, 171, 516, 375, 682, 485, 911, 276, 
   98, 553, 163, 354, 666, 933, 424, 341, 533, 870, 
   227, 730, 475, 186, 263, 647, 537, 686, 600, 224, 
   469, 68, 770, 919, 190, 373, 294, 822, 808, 206, 
   184, 943, 795, 384, 383, 461, 404, 758, 839, 887, 
   715, 67, 618, 276, 204, 918, 873, 777, 604, 560, 
   951, 160, 578, 722, 79, 804, 96, 409, 713, 940, 
   652, 934, 970, 447, 318, 353, 859, 672, 112, 785, 
   645, 863, 803, 350, 139, 93, 354, 99, 820, 908, 
   609, 772, 154, 274, 580, 184, 79, 626, 630, 742, 
   653, 282, 762, 623, 680, 81, 927, 626, 789, 125, 
   411, 521, 938, 300, 821, 78, 343, 175, 128, 250, 
   170, 774, 972, 275, 999, 639, 495, 78, 352, 126, 
   857, 956, 358, 619, 580, 124, 737, 594, 701, 612, 
   669, 112, 134, 694, 363, 992, 809, 743, 168, 974, 
   944, 375, 748, 52, 600, 747, 642, 182, 862, 81, 
   344, 805, 988, 739, 511, 655, 814, 334, 249, 515, 
   897, 955, 664, 981, 649, 113, 974, 459, 893, 228, 
   433, 837, 553, 268, 926, 240, 102, 654, 459, 51, 
   686, 754, 806, 760, 493, 403, 415, 394, 687, 700, 
   946, 670, 656, 610, 738, 392, 760, 799, 887, 653, 
   978, 321, 576, 617, 626, 502, 894, 679, 243, 440, 
   680, 879, 194, 572, 640, 724, 926, 56, 204, 700, 
   707, 151, 457, 449, 797, 195, 791, 558, 945, 679, 
   297, 59, 87, 824, 713, 663, 412, 693, 342, 606, 
   134, 108, 571, 364, 631, 212, 174, 643, 304, 329, 
   343, 97, 430, 751, 497, 314, 983, 374, 822, 928, 
   140, 206, 73, 263, 980, 736, 876, 478, 430, 305, 
   170, 514, 364, 692, 829, 82, 855, 953, 676, 246, 
   369, 970, 294, 750, 807, 827, 150, 790, 288, 923, 
   804, 378, 215, 828, 592, 281, 565, 555, 710, 82, 
   896, 831, 547, 261, 524, 462, 293, 465, 502, 56, 
   661, 821, 976, 991, 658, 869, 905, 758, 745, 193, 
   768, 550, 608, 933, 378, 286, 215, 979, 792, 961, 
   61, 688, 793, 644, 986, 403, 106, 366, 905, 644, 
   372, 567, 466, 434, 645, 210, 389, 550, 919, 135, 
   780, 773, 635, 389, 707, 100, 626, 958, 165, 504, 
   920, 176, 193, 713, 857, 265, 203, 50, 668, 108, 
   645, 990, 626, 197, 510, 357, 358, 850, 858, 364, 
   936, 638
};


00 00 00 00 B7 1D C1 04 6E 3B 82 09 D9 26 43 0D DC 76 04 13 6B 6B C5 17 B2 4D 86 1A 05 50 47 1E B8 ED 08 26 0F F0 C9 22 D6 D6 8A 2F 61 CB 4B 2B 64 9B 0C 35 D3 86 CD 31 0A A0 8E 3C BD BD 4F 38 70 DB 11 4C C7 C6 D0 48 1E E0 93 45 A9 FD 52 41 AC AD 15 5F 1B B0 D4 5B


UInt32 BZ2_crc32Table[256] = {
   0x00000000L, 0x04 C1 1D B7L, 0x09823b6eL, 0x0d4326d9L,
   0x130476dcL, 0x17c56b6bL, 0x1a864db2L, 0x1e475005L,
   0x2608edb8L, 0x22c9f00fL, 0x2f8ad6d6L, 0x2b4bcb61L,
   0x350c9b64L, 0x31cd86d3L, 0x3c8ea00aL, 0x384fbdbdL,
   0x4c11db70L, 0x48d0c6c7L, 0x4593e01eL, 0x4152fda9L,
   0x5f15adacL, 0x5bd4b01bL, 0x569796c2L, 0x52568b75L,
   0x6a1936c8L, 0x6ed82b7fL, 0x639b0da6L, 0x675a1011L,
   0x791d4014L, 0x7ddc5da3L, 0x709f7b7aL, 0x745e66cdL,
   0x9823b6e0L, 0x9ce2ab57L, 0x91a18d8eL, 0x95609039L,
   0x8b27c03cL, 0x8fe6dd8bL, 0x82a5fb52L, 0x8664e6e5L,
   0xbe2b5b58L, 0xbaea46efL, 0xb7a96036L, 0xb3687d81L,
   0xad2f2d84L, 0xa9ee3033L, 0xa4ad16eaL, 0xa06c0b5dL,
   0xd4326d90L, 0xd0f37027L, 0xddb056feL, 0xd9714b49L,
   0xc7361b4cL, 0xc3f706fbL, 0xceb42022L, 0xca753d95L,
   0xf23a8028L, 0xf6fb9d9fL, 0xfbb8bb46L, 0xff79a6f1L,
   0xe13ef6f4L, 0xe5ffeb43L, 0xe8bccd9aL, 0xec7dd02dL,
   0x34867077L, 0x30476dc0L, 0x3d044b19L, 0x39c556aeL,
   0x278206abL, 0x23431b1cL, 0x2e003dc5L, 0x2ac12072L,
   0x128e9dcfL, 0x164f8078L, 0x1b0ca6a1L, 0x1fcdbb16L,
   0x018aeb13L, 0x054bf6a4L, 0x0808d07dL, 0x0cc9cdcaL,
   0x7897ab07L, 0x7c56b6b0L, 0x71159069L, 0x75d48ddeL,
   0x6b93dddbL, 0x6f52c06cL, 0x6211e6b5L, 0x66d0fb02L,
   0x5e9f46bfL, 0x5a5e5b08L, 0x571d7dd1L, 0x53dc6066L,
   0x4d9b3063L, 0x495a2dd4L, 0x44190b0dL, 0x40d816baL,
   0xaca5c697L, 0xa864db20L, 0xa527fdf9L, 0xa1e6e04eL,
   0xbfa1b04bL, 0xbb60adfcL, 0xb6238b25L, 0xb2e29692L,
   0x8aad2b2fL, 0x8e6c3698L, 0x832f1041L, 0x87ee0df6L,
   0x99a95df3L, 0x9d684044L, 0x902b669dL, 0x94ea7b2aL,
   0xe0b41de7L, 0xe4750050L, 0xe9362689L, 0xedf73b3eL,
   0xf3b06b3bL, 0xf771768cL, 0xfa325055L, 0xfef34de2L,
   0xc6bcf05fL, 0xc27dede8L, 0xcf3ecb31L, 0xcbffd686L,
   0xd5b88683L, 0xd1799b34L, 0xdc3abdedL, 0xd8fba05aL,
   0x690ce0eeL, 0x6dcdfd59L, 0x608edb80L, 0x644fc637L,
   0x7a089632L, 0x7ec98b85L, 0x738aad5cL, 0x774bb0ebL,
   0x4f040d56L, 0x4bc510e1L, 0x46863638L, 0x42472b8fL,
   0x5c007b8aL, 0x58c1663dL, 0x558240e4L, 0x51435d53L,
   0x251d3b9eL, 0x21dc2629L, 0x2c9f00f0L, 0x285e1d47L,
   0x36194d42L, 0x32d850f5L, 0x3f9b762cL, 0x3b5a6b9bL,
   0x0315d626L, 0x07d4cb91L, 0x0a97ed48L, 0x0e56f0ffL,
   0x1011a0faL, 0x14d0bd4dL, 0x19939b94L, 0x1d528623L,
   0xf12f560eL, 0xf5ee4bb9L, 0xf8ad6d60L, 0xfc6c70d7L,
   0xe22b20d2L, 0xe6ea3d65L, 0xeba91bbcL, 0xef68060bL,
   0xd727bbb6L, 0xd3e6a601L, 0xdea580d8L, 0xda649d6fL,
   0xc423cd6aL, 0xc0e2d0ddL, 0xcda1f604L, 0xc960ebb3L,
   0xbd3e8d7eL, 0xb9ff90c9L, 0xb4bcb610L, 0xb07daba7L,
   0xae3afba2L, 0xaafbe615L, 0xa7b8c0ccL, 0xa379dd7bL,
   0x9b3660c6L, 0x9ff77d71L, 0x92b45ba8L, 0x9675461fL,
   0x8832161aL, 0x8cf30badL, 0x81b02d74L, 0x857130c3L,
   0x5d8a9099L, 0x594b8d2eL, 0x5408abf7L, 0x50c9b640L,
   0x4e8ee645L, 0x4a4ffbf2L, 0x470cdd2bL, 0x43cdc09cL,
   0x7b827d21L, 0x7f436096L, 0x7200464fL, 0x76c15bf8L,
   0x68860bfdL, 0x6c47164aL, 0x61043093L, 0x65c52d24L,
   0x119b4be9L, 0x155a565eL, 0x18197087L, 0x1cd86d30L,
   0x029f3d35L, 0x065e2082L, 0x0b1d065bL, 0x0fdc1becL,
   0x3793a651L, 0x3352bbe6L, 0x3e119d3fL, 0x3ad08088L,
   0x2497d08dL, 0x2056cd3aL, 0x2d15ebe3L, 0x29d4f654L,
   0xc5a92679L, 0xc1683bceL, 0xcc2b1d17L, 0xc8ea00a0L,
   0xd6ad50a5L, 0xd26c4d12L, 0xdf2f6bcbL, 0xdbee767cL,
   0xe3a1cbc1L, 0xe760d676L, 0xea23f0afL, 0xeee2ed18L,
   0xf0a5bd1dL, 0xf464a0aaL, 0xf9278673L, 0xfde69bc4L,
   0x89b8fd09L, 0x8d79e0beL, 0x803ac667L, 0x84fbdbd0L,
   0x9abc8bd5L, 0x9e7d9662L, 0x933eb0bbL, 0x97ffad0cL,
   0xafb010b1L, 0xab710d06L, 0xa6322bdfL, 0xa2f33668L,
   0xbcb4666dL, 0xb8757bdaL, 0xb5365d03L, 0xb1f740b4L
};

static const unsigned char md5_padding[64] =
{
80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
};

md5 stuff
0x67452301
0xEFCDAB89
0x98BADCFE
0x10325476

0xF4292244
0x432AFF97
0xAB9423A7
0xFC93A039
0x655B59C3
0x8F0CCC92
0xFFEFF47D
0x85845DD1
0x6FA87E4F
0xFE2CE6E0
0xA3014314
0x4E0811A1
0xF7537E82
0xBD3AF235
0x2AD7D2BB
0xEB86D391

0xFFFA3942
0x8771F681    
0x6D9D6122    
0xFDE5380C    
0xA4BEEA44    
0x4BDECFA9    
0xF6BB4B60    
0xBEBFBC70    
0x289B7EC6    
0xEAA127FA    
0xD4EF3085    
0x04881D05    
0xD9D4D039    
0xE6DB99E5    
0x1FA27CF8    
0xC4AC5665    
    
0xF61E2562
0xC040B340    
0x265E5A51    
0xE9B6C7AA    
0xD62F105D    
0x02441453    
0xD8A1E681    
0xE7D3FBC8    
0x21E1CDE6    
0xC33707D6    
0xF4D50D87    
0x455A14ED    
0xA9E3E905    
0xFCEFA3F8    
0x676F02D9    
0x8D2A4C8A    
    
0xD76AA478
0xE8C7B756    
0x242070DB    
0xC1BDCEEE    
0xF57C0FAF    
0x4787C62A    
0xA8304613    
0xFD469501    
0x698098D8    
0x8B44F7AF    
0xFFFF5BB1    
0x895CD7BE    
0x6B901122    
0xFD987193    
0xA679438E    
0x49B40821    
    
    
    
    
    
50 4B 57 41 52 45 20 44 61 74 61 20 43 6F 6D 70 72 65 73 73 69 6F 6E 20 4C 69 62 72 61 72 79 20 66 6F 72 20 57 69 6E 33 32

    
    
    
    

/* Local variables */
static char copyright[] = "PKWARE Data Compression Library for Win32\r\n"
                          "Copyright 1989-1995 PKWARE Inc.  All Rights Reserved\r\n"
                          "Patent No. 5,051,745\r\n"
                          "PKWARE Data Compression Library Reg. U.S. Pat. and Tm. Off.\r\n"
                          "Version 1.11\r\n";

                          

BZip_rNum[512]
6B 02 00 00 D0 02 00 00 7F 00 00 00 E1 01 00 00 A3 03 00 00 30 03 00 00 2D 03 00 00 E9 00 00 0036 02 00 00 F7 00 00 00D9 03 00 00 D4 02 00 00 CD 00 00 00 C6 01 00 00 5F 03 00 00 EB 01 00 00 E5 02 00 00 F2 00 00 00B5 03 00 00 D6 00 00 00 DD 02 00 00 5B 03 00 00 4F 01 00 00 C4 02 00 00 6D 02 00 00 3E 02 00 00 49 00 00 00 8E 02 00 00 DA 02 00 00 D8 01 00 00 A3 01 00 00 B4 01 00 00

619, 720, 127, 481, 931, 816, 813, 233, 566, 247,
985, 724, 205, 454, 863, 491, 741, 242, 949, 214,
733, 859, 335, 708, 621, 574, 73, 654, 730, 472,
419, 436, 278, 496, 867, 210, 399, 680, 480, 51,
878, 465, 811, 169, 869, 675, 611, 697, 867, 561,
862, 687, 507, 283, 482, 129, 807, 591, 733, 623,
150, 238, 59, 379, 684, 877, 625, 169, 643, 105,
170, 607, 520, 932, 727, 476, 693, 425, 174, 647,
73, 122, 335, 530, 442, 853, 695, 249, 445, 515,
909, 545, 703, 919, 874, 474, 882, 500, 594, 612,
641, 801, 220, 162, 819, 984, 589, 513, 495, 799,
161, 604, 958, 533, 221, 400, 386, 867, 600, 782,
382, 596, 414, 171, 516, 375, 682, 485, 911, 276,
98, 553, 163, 354, 666, 933, 424, 341, 533, 870,
227, 730, 475, 186, 263, 647, 537, 686, 600, 224,
469, 68, 770, 919, 190, 373, 294, 822, 808, 206,
184, 943, 795, 384, 383, 461, 404, 758, 839, 887,
715, 67, 618, 276, 204, 918, 873, 777, 604, 560,
951, 160, 578, 722, 79, 804, 96, 409, 713, 940,
652, 934, 970, 447, 318, 353, 859, 672, 112, 785,
645, 863, 803, 350, 139, 93, 354, 99, 820, 908,
609, 772, 154, 274, 580, 184, 79, 626, 630, 742,
653, 282, 762, 623, 680, 81, 927, 626, 789, 125,
411, 521, 938, 300, 821, 78, 343, 175, 128, 250,
170, 774, 972, 275, 999, 639, 495, 78, 352, 126,
857, 956, 358, 619, 580, 124, 737, 594, 701, 612,
669, 112, 134, 694, 363, 992, 809, 743, 168, 974,
944, 375, 748, 52, 600, 747, 642, 182, 862, 81,
344, 805, 988, 739, 511, 655, 814, 334, 249, 515,
897, 955, 664, 981, 649, 113, 974, 459, 893, 228,
433, 837, 553, 268, 926, 240, 102, 654, 459, 51,
686, 754, 806, 760, 493, 403, 415, 394, 687, 700,
946, 670, 656, 610, 738, 392, 760, 799, 887, 653,
978, 321, 576, 617, 626, 502, 894, 679, 243, 440,
680, 879, 194, 572, 640, 724, 926, 56, 204, 700,
707, 151, 457, 449, 797, 195, 791, 558, 945, 679,
297, 59, 87, 824, 713, 663, 412, 693, 342, 606,
134, 108, 571, 364, 631, 212, 174, 643, 304, 329,
343, 97, 430, 751, 497, 314, 983, 374, 822, 928,
140, 206, 73, 263, 980, 736, 876, 478, 430, 305,
170, 514, 364, 692, 829, 82, 855, 953, 676, 246,
369, 970, 294, 750, 807, 827, 150, 790, 288, 923,
804, 378, 215, 828, 592, 281, 565, 555, 710, 82,
896, 831, 547, 261, 524, 462, 293, 465, 502, 56,
661, 821, 976, 991, 658, 869, 905, 758, 745, 193,
768, 550, 608, 933, 378, 286, 215, 979, 792, 961,
61, 688, 793, 644, 986, 403, 106, 366, 905, 644,
372, 567, 466, 434, 645, 210, 389, 550, 919, 135,
780, 773, 635, 389, 707, 100, 626, 958, 165, 504,
920, 176, 193, 713, 857, 265, 203, 50, 668, 108,
645, 990, 626, 197, 510, 357, 358, 850, 858, 364,
936, 638,
