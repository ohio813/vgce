LIBRARY storm.dll
EXPORTS
SNetInit@0                                 @100  // ()
SNetCreateGame@36                           @101  // (char *Source, char *a2, char *a3, int a4, int a5, int a6, char *a7, char *a8, int *playerid)
SNetDestroy@0                              @102  // ()
SNetEnumProviders@8                        @103  // (int (__stdcall *callback)(DWORD, DWORD, DWORD, DWORD), int mincaps)
SNetEnumDevices@4                          @104  // (int (__stdcall *callback)(DWORD, DWORD, DWORD))
SNetEnumGames@8                            @105  // (int (__stdcall *callback)(DWORD, DWORD, DWORD), int *hintnextcall)
SNetDropPlayer@8                           @106  // (int playerid, DWORD flags)
SNetGetGameInfo@16                          @107  // (int type, void *src, unsigned int length, int *byteswritten)
SNetGetNetworkLatency@8                    @108  // (int measurementtype, int *result)
SNetGetNumPlayers@12                        @109  // (int *firstplayerid, int *lastplayerid, int *activeplayers)
SNetGetOwnerTurnsWaiting@4                 @110  // (int *turns)
SNetGetPerformanceData@24                   @111  // (int counterid, int *countervalue, int *countertype, int *counterscale, LPFILETIME *measurementtime, int *measurementfreq)
SNetGetPlayerCaps@8                        @112  // (char playerid, int *caps)
SNetGetPlayerName@12                        @113  // (int playerid, char *buffer, size_t buffersize)
SNetGetProviderCaps@4                      @114  // (void *caps)
SNetGetTurnsInTransit@4                    @115  // (int *turns)
SNetInitializeDevice@20                     @116  // (int a1, int a2, int a3, int a4, int *verbyte) // apparently not verbyte
SNetInitializeProvider@20                   @117  // (DWORD providerName, int *providerData, int *userData, int *a4, int *verbyte) // apparently not verbyte
SNetJoinGame@24                             @118  // (unsigned int a1, char *gameName, char *gamePassword, char *playerName, char *userStats, int *playerid)
SNetLeaveGame@4                            @119  // (int type)
SNetPerformUpgrade@4                       @120  // (DWORD *upgradestatus)
SNetReceiveMessage@12                       @121  // (int *senderplayerid, int *data, int *databytes)
SNetReceiveTurns@20                         @122  // (int a1, int arraysize, void **arraydata, unsigned int *arraydatabytes, DWORD *arrayplayerstatus)  // arraysize = player count
SNetRegisterEventHandler@8                 @123  // (int type, int event)
SNetResetLatencyMeasurements@0             @124  // ()
SNetSelectGame@24                           @125  // (int a1, int a2, int a3, int a4, int a5, int *playerid)
SNetSelectProvider@24                       @126  // (LPARAM lparam, int a2, int a3, int a4, int a5, int *providerid)
SNetSendMessage@12                          @127  // (unsigned int playerID, void *data, unsigned int databytes)
SNetSendTurn@8                             @128  // (void *data, unsigned int databytes)
SNetSetBasePlayer@4                        @129  // (unsigned int a1)
SNetSetGameMode@8                          @130  // (DWORD modeFlags, char a2)
SNetUnregisterEventHandler@8               @131  // (unsigned int a1, void *callback)

SNetEnumGamesEx@16                          @133  // (int a1, int a2, int (__fastcall *callback)(DWORD, DWORD, DWORD), int *hintnextcall)
SNetSendServerChatCommand@4                @134  // (const char *command)
SNet135@12                                  @135  // (signed int playerID, const void *buffer, unsigned int length)
SNet136@12                                  @136  // (int a1, int a2, int a3)
SNetGetPlayerNames@4                       @137  // (DWORD flags)
SNetCreateLadderGame@48                     @138  // (char *gameName, char *gamePassword, char *gameDataString, DWORD gameType, int a5, int a6, u8 *GameTemplateData, u32 GameTemplateSize, u32 playerCount, char *playerName, char *a11, u32 *playerID)
SNetReportGameResult@20                     @139  // (unsigned int a1, int size, int a3, int a4, int a5)
SNetCheckDataFile@16                        @140  // (int a1, int a2, int a3, int a4)
SNetSendLeagueCommand@8                    @141  // (char *cmd, void *callback)
SNetSendReplayPath@12                       @142  // (int a1, int a2, char *replayPath)
SNetGetLeagueName@4                        @143  // (int leagueID)                   // not official name
SNet144@4                                  @144  // (void *buffer)
SNetLeagueLogout@4                         @145  // (char *bnetName)
SNetGetLeaguePlayerName@8                  @146  // (int *curPlayerID, size_t nameSize)        // not official name

SDlgInit@0                                 @200  // ()
SDlgBeginPaint@8                           @201  // (HWND window, LPPAINTSTRUCT ps)
SDlgBltToWindowI@40                         @202  // (HWND window, HRGN hrgnSrc2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
SDlgCheckTimers@0                          @203  // ()
SDlgCreateDialogIndirectParam@16            @204  // (HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID lpParam)
SDlgCreateDialogParam@16                    @205  // (HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID lpParam)
SDlgDefDialogProc@16                        @206  // (HWND hDlg, signed int DlgType, HDC textLabel, HWND hWnd)
SDlgDestroy@0                              @207  // ()
SDlgDialogBoxIndirectParam@20               @208  // (HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID lpParam, LPARAM lParam)
SDlgDialogBoxParam@20                       @209  // (HMODULE hModule, LPCSTR lpName, HWND hWndParent, LPVOID lpParam, LPARAM lParam)
SDlgDrawBitmap@28                           @210  // (HWND window, HGDIOBJ a2, HRGN hrgnSrc2, int a4, int a5, int a6, char a7)
SDlgEndDialog@8                            @211  // (HWND hDlg, HANDLE nResult)
SDlgEndPaint@8                             @212  // (HWND hWnd, PAINTSTRUCT *lpPaint)
SDlgKillTimer@8                            @213  // (HWND hDlg, int state)
SDlgSetBaseFont@20                          @214  // (int a1, int a2, int a3, int a4, char *Source)
SDlgSetBitmapI@40                           @215  // (HWND hWnd, int a2, char *Str2, int mask1, int flags, int a6, int a7, int a8, int a9, int mask2)
SDlgSetControlBitmaps@28                    @216  // (HWND parentwindow, int *id, int a3, void *buffer2, void *buffer, int flags, int mask)
SDlgSetCursor@16                            @217  // (HWND hWnd, LONG dwNewLong, int a3, int a4)
SDlgSetSystemCursor@16                      @218  // (int a1, int a2, int a3, signed int a4)
SDlgSetTimer@16                             @219  // (HWND hDlg, int state, int time, int a4)
SDlgUpdateCursor@0                         @220  // ()
SDlgBltToWindowE@40                         @221  // (HWND hWnd, HRGN a2, char *a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
SDlgSetBitmapE@40                           @222  // (HWND hWnd, int a2, char *src, int mask1, int flags, int a6, int a7, int width, int a9, int mask2)
SDlgSetLocale@8                            @223  // (int category, const char *locale)
Storm_224@4                                @224  // (int a1)    // BNET/League related

SFileInit@0                                @250  // ()
SFileAuthenticateArchive@8                 @251  // (HANDLE hArchive, int a2)
SFileCloseArchive@4                        @252  // (HANDLE hArchive)
SFileCloseFile@4                           @253  // (HANDLE hFile)
SFileDdaBegin@12                            @254  // (HANDLE directsound, int a2, int a3)
SFileDdaBeginEx@28                          @255  // (HANDLE directsound, DWORD flags, DWORD mask, unsigned __int32 lDistanceToMove, signed __int32 volume, signed int a6, int a7)
SFileDdaDestroy@0                          @256  // ()
SFileDdaEnd@4                              @257  // (HANDLE directsound)
SFileDdaGetPos@12                           @258  // (HANDLE directsound, int a2, int a3)
SFileDdaGetVolume@12                        @259  // (HANDLE directsound, int a2, int a3)
SFileDdaInitialize@4                       @260  // (HANDLE directsound)
SFileDdaSetVolume@12                        @261  // (HANDLE directsound, signed int bigvolume, signed int volume)
SFileDestroy@0                             @262  // ()
SFileEnableDirectAccess@4                  @263  // (HANDLE hFile)
SFileGetFileArchive@8                      @264  // (HANDLE hFile, HANDLE archive)
SFileGetFileSize@8                         @265  // (HANDLE hFile, LPDWORD lpFileSizeHigh)
SFileOpenArchive@16                         @266  // (char *archivename, DWORD dwPriority, DWORD dwFlags, HANDLE *handle)
SFileOpenFile@8                            @267  // (char *filename, HANDLE *handle)
SFileOpenFileEx@16                          @268  // (HANDLE handle, char *filename, char mode, HANDLE *result)
SFileReadFile@20                            @269  // (HANDLE hFile, void *buffer, DWORD nNumberOfBytesToRead, int *read, LONG lpDistanceToMoveHigh)
SFileSetBasePath@4                         @270  // (char *path)
SFileSetFilePointer@16                      @271  // (HANDLE hFile, LONG filePos, LONG *filePosHigh, DWORD dwMethod)
SFileSetLocale@4                           @272  // (LCID lcLocale)
SFileGetBasePath@8                         @273  // (char *result, int maxSize)
SFileSetIoErrorMode@8                      @274  // (int mode, void *callback)
SFileGetArchiveName@12                      @275  // (HANDLE hArchive, char *name, int length)
SFileGetFileName@12                         @276  // (HANDLE hFile, char *buffer, int length)
SFileGetArchiveInfo@12                      @277  // (int a1, int a2, int a3)
SFileSetPlatform@4                         @278  // (char a1)
SFileLoadFile@20                            @279  // (char *filename, void *buffer, int buffersize, int a4, int a5)
SFileUnloadFile@4                          @280  // (HANDLE hFile)
SFileLoadFileEx@28                          @281  // (void *hArchive, char *filename, int a3, int a4, int a5, DWORD searchScope, struct _OVERLAPPED *lpOverlapped)
SFilePrioritizeRequest@8                   @282  // (int a1, int a2)
SFileCancelRequest@4                       @283  // (int a1)
SFileSetAsyncBudget@4                      @284  // (int a1)
SFileSetDataChunkSize@4                    @285  // (int a1)
SFileEnableSeekOptimization@4              @286  // (int a1)
SFileReadFileEx@24                          @287  // (int a1, int a2, int a3, int a4, PLONG lpDistanceToMoveHigh, int a6)
SFileFileExists@4                          @288  // (HANDLE hFile)
SFileFileExistsEx@28                        @289  // (HANDLE hFile, void *buffer, DWORD nNumberOfBytesToRead, int *read, LONG lpDistanceToMoveHigh, int a6, int a7);
SFileReadFileEx2@32                         @290  // (int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
SFileReadFile2                           @291                       
SFileLoadFile2                           @292                       
SFileOpenFileAsArchive                   @293                       
SFileGetLocale@0                           @294  // ()
SFileRegisterLoadNotifyProc              @295                       
SFileGetFileCompressedSize               @296                       

SFileAuthenticateArchiveEx               @299                       
SFileOpenPathAsArchive                   @300                       
StormDestroy@0                             @301  // ()
StormGetInstance@0                         @302  // ()
StormGetOption@12                           @303  // (int type, int optval, size_t optlen)
StormSetOption@12                           @304  // (int type, int optval, size_t optlen)

SBltDestroy@0                              @311  // ()
SBltGetSCode@16                             @312  // (unsigned int maxiterations, char *buffer, size_t buffersize, char *loopstring)
SBltROP3@32                                 @313  // (int maxiterations, int lpSurface, int width, int height, int width2, int pitch, int a7, unsigned DWORD rop)
SBltROP3Clipped@40                          @314  // (int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
SBltROP3Tiled@40                            @315  // (int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)

SBmpInit@0                                 @320  // ()
SBmpDecodeImage@36                          @321  // (int type, signed int *srcbuffer, unsigned int a3, int a4, void *dstbuffer, int size, int a7, int a8, int a9)
SBmpDestroy@0                              @322  // ()
SBmpLoadImage@28                            @323  // (const char *fileName, int size, void *buffer, int buffersize, int width, int height, int depth)
SBmpSaveImage@24                            @324  // (const char *fileName, int paletteentries, int bitdepth, unsigned __int16 width, unsigned __int16 height, int bitmapbits)
SBmpAllocLoadImage@32                       @325  // (const char *fileName, int *palette, void **buffer, int *width, int *height, int unused6, int unused7, int (__stdcall *allocFunction)(DWORD))
SBmpSaveImageEx@28                          @326  // (const char *fileName, int paletteentries, int bitdepth, unsigned __int16 width, unsigned __int16 height, int bitmapbits, int reserved)

SCodeInit@0                                @330  // ()
SCodeCompile@24                             @331  // (char *directives1, char *directives2, char *loopstring, unsigned int maxiterations, unsigned int flags, HANDLE *handle)
SCodeDelete@4                              @332  // (HANDLE *handle)
SCodeDestroy@0                             @333  // ()
SCodeExecute@8                             @334  // (HANDLE *handle, int a2)
SCodeGetPseudocode@12                       @335  // (int scodestring, int buffer, size_t buffersize)

SDrawInit@0                                @340  // ()
SDrawAutoInitialize@32                      @341  // (HINSTANCE hWnd, LPCSTR lpClassName, LPCSTR lpWindowName, int (__stdcall *a4)(HWND, UINT, WPARAM, LPARAM), signed int a5, int nWidth, int nHeight, int a8)
SDrawCaptureScreen@4                       @342  // (char *source)
SDrawClearSurface@4                        @343  // (int surfacenumber)
SDrawDestroy@0                             @344  // ()
SDrawFlipPage@0                            @345  // ()
SDrawGetFrameWindow@4                      @346  // (int sdraw_framewindow)
SDrawGetObjects@28                          @347  // (int obj1, int obj2, int obj3, int obj4, int obj5, int obj6, int obj7)
SDrawGetScreenSize@12                       @348  // (int width, int height, int depth)
SDrawGetServiceLevel@4                     @349  // (int a1)
SDrawLockSurface@20                         @350  // (int surfacenumber, RECT *lpDestRect, void **lplpSurface, int *lpPitch, int arg_unused)
SDrawManualInitialize@32                    @351  // (HWND a1, int obj1, int obj2, int obj3, int obj4, int obj5, int obj6, void *obj7)
SDrawMessageBox@12                          @352  // (LPCSTR lpText, LPCSTR lpCaption, UINT uType)
SDrawPostClose@0                           @353  // ()
SDrawRealizePalette@0                      @354  // ()
SDrawSelectGdiSurface@8                    @355  // (unsigned int a1, int a2)
SDrawUnlockSurface@16                       @356  // (int surfacenumber, void *lpSurface, int zero1, int zero2)
SDrawUpdatePalette@16                       @357  // (unsigned int firstentry, unsigned int numentries, PALETTEENTRY *pPalEntries, int a4)
SDrawUpdateScreen@4                        @358  // (BOOL bErase)
SDrawWaitForVerticalBlank@0                @359  // ()

SEvtDispatch@16                             @372  // (DWORD messageID, int a2, int a3, int a4)
SEvtRegisterHandler@20                      @373  // (DWORD messageID, unsigned int a2, int event, int a4, void *function)
SEvtUnregisterHandler@16                    @374  // (DWORD messageID, int a2, int a3, int a4)
SEvtUnregisterType@8                       @375  // (DWORD messageID, int type)
SEvtPopState@8                             @376  // (DWORD messageID, int type)
SEvtPushState@8                            @377  // (DWORD messageID, int type)
SEvtBreakHandlerChain@4                    @378  // (int a1)

SGdiInit@0                                 @380  // ()
SGdiBitBlt@36                               @381  // (int a1, int a2, int a3, int a4, unsigned int a5, int a6, int a7, unsigned int a8, signed int a9)
SGdiCreateFont@32                           @382  // (const void *handle, int bits, int width, int height, int filecharwidth, int filecharheight, const void *charsizetable, int windowsfont)
SGdiDeleteObject@4                         @383  // (void *handle)
SGdiDestroy@0                              @384  // ()
SGdiExtTextOut@36                           @385  // (int a1, int a2, int a3, int a4, unsigned int a8, signed int a6, signed int a7, const char *string, unsigned int arg20)
SGdiImportFont@8                           @386  // (HGDIOBJ handle, int windowsfont)
SGdiLoadFont@24                             @387  // (char *Str, int filecharwidth, int filecharheight, int argC, int a7, int a8)
SGdiRectangle@24                            @388  // (int lpSurface, int a2, int a3, int width, int height, int a6)
SGdiSelectObject@4                         @389  // (int handle)
SGdiSetPitch@4                             @390  // (int pitch)
SGdiTextOut@24                              @391  // (int a1, int a2, int a3, unsigned int a8, const char *string, unsigned int arg20)
SGdi392@16                                  @392  // (int width, int height, int depth, int width2)        // SGdiGetTextExtent?
Storm_393@12                                @393  // (char *string, int, int)

SMemInit@0                                 @400  // ()
SMemAlloc@16                                @401  // (int amount, char *logfilename, int logline, int defaultValue)
SMemDestroy@0                              @402  // ()
SMemFree@16                                 @403  // (void *location, char *logfilename, int logline, char defaultValue)
SMemGetSize@12                              @404  // (void *location, char *logfilename, int logline)
SMemReAlloc@20                              @405  // (void *location, int amount, char *logfilename, int logline, int defaultValue)

SMsgDispatchMessage@24                      @412  // (HWND hWnd, DWORD messageID, WPARAM wParam, LPARAM lParam, int a5, int a6)
SMsgDoMessageLoop@8                        @413  // (void *callback, int followWithStormDestroy)
SMsgRegisterCommand@12                      @414  // (int a1, int event, int a3)     // SMSH
SMsgRegisterKeyDown@12                      @415  // (int a1, int event, int a3)     // SMSJ
SMsgRegisterKeyUp@12                        @416  // (int a1, int event, int a3)     // SMSK
SMsgRegisterMessage@12                      @417  // (int a1, int event, int a3)     // SMSG
SMsgPopRegisterState@4                     @418  // (int type)
SMsgPushRegisterState@4                    @419  // (int type)
SMsg420@12                                  @420  // (int a1, int a2, int a3)     // Register SMSI
SRegLoadData@24                             @421  // (char *keyname, char *valuename, int size, LPBYTE lpData, BYTE flags, LPDWORD lpcbData)
SRegLoadString@20                           @422  // (char *keyname, char *valuename, BYTE flags, char *buffer, size_t buffersize)
SRegLoadValue@16                            @423  // (char *keyname, char *valuename, BYTE flags, int value)
SRegSaveData@20                             @424  // (char *keyname, char *valuename, int size, BYTE *lpData, DWORD cbData)
SRegSaveString@16                           @425  // (char *keyname, char *valuename, BYTE flags, char *string)
SRegSaveValue@16                            @426  // (char *keyname, char *valuename, BYTE flags, DWORD result)
SRegGetBaseKey@12                           @427  // (BYTE flags, char *buffer, size_t bufferchars)
SRegDeleteValue@12                          @428  // (char *keyname, char *valuename, BYTE flags)
SReg429@20                                  @429  // (char *keyname, DWORD dwflags, DWORD dwIndex, char *, size_t)
SReg430@12                                  @430  // (char *keyname, int, DWORD cSubKeys)
STransBlt@20                                @431  // (int handle, int a2, int a3, int a4, int a5)
STransBltUsingMask@20                       @432  // (int lpSurface, int a2, int pitch, int width, int handle)
STransCreateI@28                            @433  // (int handle, int a2, int a3, signed int a4, int a5, int a6, int a7)
STransDelete@4                             @434  // (int handle)
STransDestroy@0                            @435  // ()
STransDuplicate@8                          @436  // (int handle, int source)
STransIntersectDirtyArray@16                @437  // (int handle, int dirtyarraymask, unsigned __int8 dirtyarray, int sourcemask)
STransInvertMask@8                         @438  // (int handle, int sourcemask)
STransLoadI@16                              @439  // (char *filename, int a2, int a3, int handle)
STransSetDirtyArrayInfo@16                  @440  // (int width, int height, int depth, int bits)
STransUpdateDirtyArray@24                   @441  // (int a1, char a2, int a3, int a4, int a5, int a6) // dirtyarray, dirtyvalue, transparency
STrans442@20                                @442  // (int a1, int a2, int a3, char *a4, size_t a5)       // STransIsPixelInMask? STransGetBoundingRect?
STransCombineMasks@24                       @443  // (int handle, int a2, int a3, int a4, int depth, int a6)
STransCreateI@28                            @444  // (int a1, int a2, int a3, int a4, int a5, int a6, int a7)
STransCreateE@28                            @445  // (int a1, int a2, int a3, int bpp, int a5, int bufferSize, int a7)
STrans446@28                                @446  // (int a1, int a2, int a3, int a4, int a5, int a6, int a7)       // STransIsPixelInMask? STransGetBoundingRect?
STransLoadE@16                              @447  // (char *filename, int a2, int a3, int handle)

SVidInit@0                                 @450  // ()
SVidDestroy@0                              @451  // ()
SVidGetSize@16                              @452  // (HANDLE video, int width, int height, int zero)
SVidInitialize@4                           @453  // (HANDLE video)
SVidPlayBegin@28                            @454  // (char *filename, int arg4, int a3, int a4, int a5, int a6, HANDLE video)
SVidPlayBeginFromMemory@32                  @455  // (void *destbuffer, int destsize, int arg4, int a3, int a4, int a6, int sourcebytes, int sourceptr) // flags, paletteuse
SVidPlayContinue@0                         @456  // ()
SVidPlayContinueSingle@12                   @457  // (HANDLE video, int a2, int a3)
SVidPlayEnd@4                              @458  // (HANDLE video)
SVidSetVolume@16                            @459  // (HANDLE video, int a2, int a3, int type)
SErrInit@0                                 @460  // ()
SErrDisplayError@24                         @461  // (DWORD dwErrCode, char *logfile, int logline, int location, int exitCode, UINT uExitCode)
SErrGetErrorStr@12                          @462  // (DWORD dwErrCode, char *buffer, size_t bufferchars)
SErrGetLastError@0                         @463  // ()
SErrRegisterMessageSource@12                @464  // (__int16 a1, int a2, int a3)
SErrSetLastError@4                         @465  // (DWORD dwErrCode)
SErrReportNamedResourceLeak@8              @466  // (char *resourceName, int)
SErrReportResourceLeak@4                   @467  // (char *resourceName)
SErrSuppressErrors@4                       @468  // (BOOL suppressErrors)
SErrRegisterHandler@4                      @469  // (int)
SErrUnregisterHandler@4                    @470  // (int)
SCmdInit                                 @471
SCmdGetBool@4                              @472  // (int a1)
SCmdGetNum@4                               @473  // (int a1)
SCmdGetString@12                            @474  // (int a1, char* dest, size_t size)
SCmdProcess@16                              @475  // (const char **string, int a2, int a3, int a4)
SCmdRegisterArgList@8                      @476  // (void *argstruct, int count)
SCmdRegisterArgument@32                     @477  // (int a1, int a2, char *str, int a4, int a5, int a6, int a7, int a8)
SCmd478@4                                  @478  // (int a1)    // called in conjunction with 474
SCmdProcessCommandLine@8                   @479  // (int count, void *function)
SMemInit2@0                                @480  // ()
SMemFindNextBlock@16                        @481  // (int a1, int a2, int a3, int a4)
SMemFindNextHeap@12                         @482  // (int prevheap, int details, int nextheap)
SMemGetHeapByCaller@8                      @483  // (int a1, int a2)
SMemGetHeapByPtr@4                         @484  // (int a1)
SMemHeapAlloc@12                            @485  // (int a1, int a2, int a3)
SMemHeapCreate@20                           @486  // (int a1, int a2, int a3, char a4, DWORD ExitCode)
SMemHeapDestroy@4                          @487  // (int)
SMemHeapFree@12                             @488  // (int a1, int a2, void *a3)
SMemHeapRealloc@16                          @489  // (int a1, int a2, void *a3, int a4)
SMemHeapSize@12                             @490  // (int a1, int a2, void *a3)
SMemCopy@12                                 @491  // (void *dest, const void *source, size_t size)
SMemFill@12                                 @492  // (void *location, size_t length, char fillWith)
SMemMove@12                                 @493  // (void *dest, void *source, size_t size)
SMemZero@8                                 @494  // (void *location, size_t length)
SMemCmp@12                                  @495  // (void *location1, void *location2, size_t size)
SMem496@8                                  @496  // (int, char)             // either SMemGetAllocated or SMemSetDebugFlags
SMemDumpState@8                            @497  // (int, int)

SStrInit@0                                 @500  // ()
SStrCopy@12                                 @501  // (char *dest, const char *source, size_t size)
SStrHash@12                                 @502  // (const char *string, DWORD flags, DWORD Seed)
SStrNCat@12                                 @503  // (char *base, char *new, int max_length)
SStrTokenize@20                             @504  // (const char **string, char *(*string), char *buffer, const char *whitespace, size_t size)
SStrPack@12                                 @505  // (const char *string, char c, int type)
SStrLen@4                                  @506  // (const char* string)
SStrDup@4                                  @507  // (const char* string)
SStrCmp@12                                  @508  // (const char *string1, const char *string2, size_t size)
SStrCmpI@12                                 @509  // (const char *string1, const char *string2, size_t size)
SStrUpper@4                                @510  // (char *string)
SMsgBreakHandlerChain@4                    @511  // (int a1)
SMsgUnregisterCommand@12                    @512  // (int a1, int a2, int a3)     // SMSH
SMsgUnregisterKeyDown@12                    @513  // (int a1, int a2, int a3)     // SMSJ
SMsgUnregisterKeyUp@12                      @514  // (int a1, int a2, int a3)     // SMSK
SMsgUnregisterMessage@12                    @515  // (int a1, int a2, int a3)     // SMSG
SMsg516@4                                  @516  // (int a1)                 // calls 412
SMsgSetDefaultWindow@4                     @517  // (int a1)
SMsgGetDefaultWindow@0                     @518  // ()
SMsg519@12                                  @519  // (int a1, int a2, int a3)         // Unregister SMSI

storm_521@4                                @521  // (int a1)

SRgn523@16                                  @523  // (int handle, RECT *rect, int a3, int a4)
SRgn524@8                                  @524  // (int handle, int a2)
SRgn525@4                                  @525  // (int handle)            // related to the above two

SRgn527@12                                  @527  // (int handle, int a2, int a3)
SRgn528i@16                                 @528  // (int handle, int a2, int a3, int a4)  // 534
SRgn529i@12                                 @529  // (int handle, int a2, int a3) // 536
SRgn530i@8                                 @530  // (int handle, int a2) // 537
SRgn531i@12                                 @531  // (int handle, int a2, int a3) //538
SRgn532i@8                                 @532  // (int handle, int a2) // 539
SRgn533i@12                                 @533  // (int handle, int a2, int a3) // 540
SRgn534@16                                  @534  // (int handle, int a2, int a3, int a4)
SRgn535f@16                                 @535  // (int handle, float a2, float a3, float a4)
SRgn536f@12                                 @536  // (int handle, float a2, float a3)
SRgn537f@8                                 @537  // (int handle, float a2)
SRgn538f@12                                 @538  // (int handle, float a2, float a3)
SRgn539f@8                                 @539  // (int handle, float a2)
SRgn540f@12                                 @540  // (int handle, float a2, float a3)
SLogClose@4                                @541  // (DWORD NumberOfBytesWritten)
SLogCreate@12                               @542  // (char *filename, int a2, int a3)
SLog543@8                                  @543  // (int a1, int a2)
SLogDump@12                                 @544  // (int a1, int a2, DWORD NumberOfBytesWritten)
SLogFlush@4                                @545  // (DWORD NumberOfBytesWritten)
SLogFlushAll@0                             @546  // ()
SLogPend@12                                 @547  // (int a1, char *a2, char a3)
SLogWrite                                @548  // (HANDLE handle, char *format, ...)
SLog549@8                                  @549  // (int a1, int a2)
SLog550@8                                  @550  // (HANDLE handle, int a2)
SCompCompress@28                            @551  // (void *a1, int a2, unsigned int a3, signed int amount, int a5, char a6, int a7)
SCompDecompress@16                          @552  // (void *a1, int *a2, const void *a3, unsigned int a4)
SLogVWrite                               @553  // (HANDLE handle, char *format, ...)

SErrInit@0                                 @560  // ()
SErrCheckDebugSymbolLibrary@8              @561  // (char *, char)
SErrDisplayErrorFmt                      @562  // (DWORD dwMessageId, char *logfile, int logline, int unk, UINT uExitCode, char *format, ...)
SErrIsDisplayingError@0                    @563  // ()
SErrPrepareAppFatal@8                      @564  // (int a1, int a2)
SErrSetLogTitleString@4                    @565  // (int a1)
SErrDisplayAppFatal@4                      @566  // (int a1)
SErrCatchUnhandledExceptions@4             @567  // ()

SStrChr@8                                  @569  // (char *string, char c)
SStrChrR@8                                 @570  // (char *string, char c)
SStrChr@8                                  @571  // (const char *string, char c)
SStrChrR@8                                 @572  // (const char *string, char c)
SStrToDouble@4                             @573  // (const char *string)
SStrToFloat@4                              @574  // (const char *string)
SStrToInt@4                                @575  // (const char *string)
SStrToUnsigned@4                           @576  // (const char *string)
SStrToInt64@4                              @577  // (const char *string)
SStrVPrintf                              @578  // (char *dest, size_t size, const char *format, ...)
SStrLower@4                                @579  // (char *string)
SStrHash64@16                               @580  // (int a1, int a2, int a3, int a4)     //  or SStrHashHT??
SStrPrintf                               @581  // (char *dest, size_t size, const char *format, ...)
SStr582@4                                  @582  // (int a1)
Storm_583@4                                @583  // int          __stdcall (int a1)
SStrStrI@8                                 @584  // (char *string, const char *search)
SStrStrI@8                                 @585  // (const char *string, const char *search)
SStrStr@8                                  @586  // (char *string, const char *search)
SStrStr@8                                  @587  // (const char *string, const char *search)
SNet588@8                                  @588  // (char *a1, char *a2)    // league related

SBigInit@0                                 @600  // ()
SBigAdd@12                                  @601  // (void *buffer, const void *buffer2, const void *buffer3)
SBigAnd@12                                  @602  // (void *buffer, const void *buffer2, const void *buffer3)
SBigCompare@8                              @603  // (void *buffer, void *buffer2)
SBigCopy@8                                 @604  // (void *buffer, void *buffer2)
SBigDec@8                                  @605  // (void *buffer, const void *buffer2)
SBigDel@4                                  @606  // (void *buffer)
SBigDiv@12                                  @607  // (int a1, const void *buffer1, const void *buffer2)
SBigFindPrime@16                            @608  // (int a1, void *a2, unsigned int a3, const void *a4)
SBigFromBinary@12                           @609  // (void *buffer, const void *str, size_t size)
SBigFromStr@8                              @610  // (void *buffer, int a2)
SBigFromStream@16                           @611  // (void *buffer, int a2, int a3, int a4)
SBigFromUnsigned@8                         @612  // (void *buffer, unsigned int value)
SBigGcd@12                                  @613  // (void *buffer, int a2, int a3)
SBigInc@8                                  @614  // (void *buffer, int a2)
SBigInvMod@12                               @615  // (void *buffer, int a2, int a3)
SBigIsEven@4                               @616  // (void *buffer)
SBigIsOdd@4                                @617  // (void *buffer)
SBigIsOne@4                                @618  // (void *buffer)
SBigIsPrime@4                              @619  // (void *buffer)
SBigIsZero@4                               @620  // (void *buffer)
SBigMod@12                                  @621  // (void *buffer, int a2, int a3)
SBigMul@12                                  @622  // (void *buffer, int a2, int a3)
SBigMulMod@16                               @623  // (void *buffer, int a2, int a3, int a4)
SBigNew@4                                  @624  // (void **buffer)
SBigNot@8                                  @625  // (void *buffer, int a2)
SBigOr@12                                   @626  // (void *buffer, int a2, int a3)
SBigPow@12                                  @627  // (void *buffer, int a2, int a3)
SBigPowMod@16                               @628  // (void *buffer1, void *buffer2, int a3, int a4)
SBigRand@12                                 @629  // (void *buffer, int a2, int a3)
SBigSet2Exp@8                              @630  // (void *buffer, int a2)
SBigSetOne@4                               @631  // (void *buffer)
SBigSetZero@4                              @632  // (void *buffer)
SBigShl@12                                  @633  // (void *buffer, int a2, int a3)
SBigShr@12                                  @634  // (void *buffer, int a2, int a3)
SBigSquare@8                               @635  // (void *buffer, int a2)
SBigSub@12                                  @636  // (void *buffer, int a2, int a3)
SBigToBinaryArray@12                        @637  // (void *buffer, int length, int a3)
SBigToBinaryBuffer@16                       @638  // (void *buffer, int length, int a3, int a4)
SBigToBinaryPtr@12                          @639  // (void *buffer, int a2, int a3)
SBigToStrArray@12                           @640  // (void *buffer, int a2, int a3)
SBigToStrBuffer@12                          @641  // (void *buffer, char *dst, int count)
SBigToStrPtr@8                             @642  // (void *buffer, int a2)
SBigToStreamArray@12                        @643  // (void *buffer, int a2, int a3)
SBigToStreamBuffer@16                       @644  // (void *buffer, int a2, int a3, int a4)
SBigToStreamPtr@12                          @645  // (void *buffer, int a2, int a3)
SBigToUnsigned@8                           @646  // (void *buffer, int a2)
SBigXor@12                                  @647  // (void *buffer, int a2, int a3)
SSignatureVerify@16                         @648   // (int a1, int a2, int a3, int a4)
SSignatureVerifyStream_Begin@4             @649   // (int a1)
SSignatureVerifyStream_ProvideData@4       @650   // (int a1)
SSignatureVerifyStream_Finish@4            @651   // (int a1)
SSignatureGenerate@24                       @652   // (int a1, int a2, int a3, int a4, int a5, int a6)
SSignatureVerifyStream_GetSignatureLength@0   @653   // ()

SUniInit@0                                 @900  // ()
SUniConvertUTF16to8Len@12                   @901  // (int a1, int a2, int a3)
SUniConvertUTF16to8@24                      @902  // (int a1, int mask1, int a3, int mask2, int a5, int a6)
SUniConvertUTF8to16Len@12                   @903  // (int a1, int a2, int a3)
SUniConvertUTF8to16@24                      @904  // (int a1, int a2, int a3, int a4, int a5, int a6)
SUniS905@8                                 @905  // (int a1, int a2)      // SUniSPutUTF8 or SUniSGetUTF8
SUniS906@8                                 @906  // (int a1, int a2)      // SUniSPutUTF8 or SUniSGetUTF8
SUniFindAfterUTF8Chr@8                     @907  // (int a1, int a2)
SUniFindUTF8ChrStart@8                     @908  // (int a1, int a2)
SUniConvertUTF16To909@12                    @909  // (unsigned __int32 a1, char *a2, unsigned __int16 *a3)    // SUniConvertUTF16ToDos, SUniConvertUTF16ToMac, or SUniConvertUTF16ToWin
SUniConvertUTF16To910@12                    @910  // (unsigned __int32 a1, char *a2, unsigned __int16 *a3)    // SUniConvertUTF16ToDos, SUniConvertUTF16ToMac, or SUniConvertUTF16ToWin
SUniConvertUTF16To911@12                    @911  // (unsigned __int32 a1, char *a2, unsigned __int16 *a3)    // SUniConvertUTF16ToDos, SUniConvertUTF16ToMac, or SUniConvertUTF16ToWin
SUniConvert912@12                           @912  // (int a1, int a2, int a3)        // SUniConvertDosToUTF16, SUniConvertMacToUTF16, or SUniConvertWinToUTF16
SUniConvert913@12                           @913  // (int a1, int a2, int a3)        // SUniConvertDosToUTF16, SUniConvertMacToUTF16, or SUniConvertWinToUTF16
SUniConvert914@12                           @914  // (int a1, int a2, int a3)        // SUniConvertDosToUTF16, SUniConvertMacToUTF16, or SUniConvertWinToUTF16
SUniConvertUTF8ToWin@12                     @915  // (unsigned __int32 a1, char *a2, unsigned __int16 *a3)
